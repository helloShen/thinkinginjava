/*
 * Decompiled with CFR 0_118.
 */
package com.ciaoshen.thinkinjava.chapter19;

import java.io.PrintStream;

public abstract class Light
extends Enum<Light> {
    public static final /* enum */ Light GREEN = new Light("GREEN", 0, 1){

        @Override
        public void show() {
            System.out.println("Green");
        }
    };
    public static final /* enum */ Light YELLOW = new Light("YELLOW", 1, 2){

        @Override
        public void show() {
            System.out.println("Yellow");
        }
    };
    public static final /* enum */ Light RED = new Light("RED", 2, 3){

        @Override
        public void show() {
            System.out.println("Red");
        }
    };
    private int id;
    private static final /* synthetic */ Light[] $VALUES;

    public static Light[] values() {
        return (Light[])$VALUES.clone();
    }

    public static Light valueOf(String string) {
        return Enum.valueOf(Light.class, string);
    }

    private Light(int n2) {
        super(string, n);
        this.id = n2;
    }

    public abstract void show();

    static {
        $VALUES = new Light[]{GREEN, YELLOW, RED};
    }

}